Блажко Иван ИТ-8 Лабораторная работа №1
Задача 1
Текст задачи
Дана сигнатура метода: public int sumLastNums (int x); Необходимо реализовать метод таким образом, чтобы он возвращал результат сложения двух последних знаков числах, предполагая, что знаков в числе не менее двух.

Алгоритм решения
x % 10 - получает последнюю цифру числа (единицы) x % 100 / 10 - получает предпоследнюю цифру (десятки) Возвращает сумму полученных значений

Задача 2
Текст задачи
Дана сигнатура метода: public bool isPositive (int x); Необходимо реализовать метод таким образом, чтобы он принимал число x и возвращал true, если оно положительное

Алгоритм решения
Сравнивает число x с нулём. Если x ≥ 0, возвращает true, иначе false.

Задача 3
Текст задачи
Дана сигнатура метода: public bool isUpperCase (char x); Необходимо реализовать метод таким образом, чтобы он принимал символ x и возвращал true, если это большая буква в диапазоне от ‘A’ до ‘Z’.

Алгоритм решения
Проверяет, находится ли символ x в диапазоне от 'A' до 'Z' включительно Если буква заглавная возвращает True, иначе False

Задача 4
Текст задачи
Дана сигнатура метода: public bool isDivisor (int a, int b); Необходимо реализовать метод таким образом, чтобы он возвращал true, если любое из принятых чисел делит другое нацело.

Алгоритм решения
Проверяет два условия: a % b == 0 - делится ли a на b без остатка b % a == 0 - делится ли b на a без остатка Возвращает true, если выполняется хотя бы одно условие.

Задача 5
Текст задачи
Дана сигнатура метода: public int lastNumSum(int a, int b) Необходимо реализовать метод таким образом, чтобы он считал сумму цифр двух чисел из разряда единиц. Выполните с его помощью последовательное сложение пяти чисел и результат выведите на экран. Постарайтесь выполнить задачу, используя минимально возможное количество вспомогательных переменных.

Алгоритм решения
Шаг 1: Первое сложение Вычисляем сумму последних цифр чисел a и b Сохраняем результат в переменную c Выводим на экран сообщение формата "a + b это c"

Шаг 2: Второе сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата c и последней цифры нового числа a Сохраняем результат в переменную b Выводим на экран сообщение формата "c + a это b"

Шаг 3: Третье сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата b и последней цифры нового числа a Сохраняем результат в переменную c Выводим на экран сообщение формата "b + a это c"

Шаг 4: Четвертое сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата c и последней цифры нового числа a Сохраняем результат в переменную b Выводим на экран сообщение формата "c + a это b"

Шаг 5: Завершение Возвращаем конечный результат из переменной b

Задача 6
Текст задачи
Дана сигнатура метода: public double safeDiv(int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал деление x на y, и при этом гарантировал, что не будет выкинута ошибка деления на 0. При делении на 0 следует вернуть из метода число 0. Подсказка: смотри ограничения на операции типов данных.

Алгоритм решения
Проверяет, равен ли делитель y нулю. Если да, возвращает 0. Иначе возвращает деление x на y.

Задача 7
Текст задачи
Дана сигнатура метода: public String makeDecision (int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал строку, которая включает два принятых методом числа и корректно выставленный знак операции сравнения (больше, меньше, или равно)

Алгоритм решения
Сравнивает x и y: Если x > y, возвращает строку "x > y" Если x < y, возвращает строку "x < y" Иначе возвращает строку "x == y"

Задача 8
Текст задачи
Дана сигнатура метода: public bool sum3 (int x, int y, int z); Необходимо реализовать метод таким образом, чтобы он возвращал true, если два любых числа (из трех принятых) можно сложить так, чтобы получить третье.

Алгоритм решения
Проверяет три возможные комбинации: x + y == z x + z == y y + z == x Возвращает true, если выполняется хотя бы одна комбинация. Иначе возвращает false

Задача 9
Текст задачи
Дана сигнатура метода: public String age (int x); Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой сначала будет число х, а затем одно из слов: год года лет Слово “год” добавляется, если число х заканчивается на 1, кроме числа 11. Слово “года” добавляется, если число х заканчивается на 2, 3 или 4, кроме чисел 12, 13, 14. Слово “лет” добавляется во всех остальных случаях

Алгоритм решения
Проверяет окончание числа x: число x делится на 10 с остатком 1 и не равно 11 - "год" число x делится на 10 с остатком 2, 3, 4 и не в диапазоне 12-14 - "года" В остальных случаях - "лет"

Задача 10
Текст задачи
Дана сигнатура метода: public void printDays (String x); В качестве параметра метод принимает строку, в которой записано название дня недели. Необходимо реализовать метод таким образом, чтобы он выводил на экран название переданного в него дня и всех последующих до конца недели дней. Если в качестве строки передан не день, то выводится текст “это не день недели”. Первый день понедельник, последний – воскресенье. Вместо if в данной задаче используйте switch.

Алгоритм решения
Использует оператор switch с goto case для последовательного вывода дней недели. Приводит входную строку к нижнему регистру. Обрабатывает некорректный ввод через default.

Задача 11
Текст задачи
Дана сигнатура метода: public String reverseListNums(int x); Дана сигнатура метода: public String reverseListNums (int x); Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой будут записаны все числа от x до 0 (включительно).

Алгоритм решения
Использует цикл while, который выполняется пока x ≥ 0. На каждой итерации добавляет текущее значение x к результату и уменьшает x на 1.

Задача 12
Текст задачи
Дана сигнатура метода: public int pow (int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал результат возведения x в степень y

Алгоритм решения
Инициализирует переменную pow = 1. В цикле от 0 до y-1 умножает pow на x. Возвращает полученное значение.

Задача 13
Текст задачи
Дана сигнатура метода: public bool equalNum (int x); Необходимо реализовать метод таким образом, чтобы он возвращал true, если все знаки числа одинаковы, и false в ином случае.

Алгоритм решения
Обрабатывает особый случай x = 0. Для отрицательных чисел берёт модуль. Запоминает последнюю цифру и в цикле проверяет, что все цифры числа равны этой цифре.

Задача 14
Текст задачи
Дана сигнатура метода: public void leftTriangle (int x); Необходимо реализовать метод таким образом, чтобы он выводил на экран треугольник из символов ‘*’ у которого х символов в высоту, а количество символов в ряду совпадает с номером строки.

Алгоритм решения
Использует двойной цикл: Внешний цикл от 1 до x (количество строк) Внутренний цикл от 1 до i (количество звёздочек в строке)

Задача 15
Текст задачи
Дана сигнатура метода: public void guessGame() Необходимо реализовать метод таким образом, чтобы он генерировал случайное число от 0 до 9, далее считывал с консоли введенное пользователем число и выводил, угадал ли пользователь то, что было загадано, или нет. Метод запускается до тех пор, пока пользователь не угадает число. После этого выведите на экран количество попыток, которое потребовалось пользователю, чтобы угадать число.

Алгоритм решения
Генерирует случайное число от 0 до 9. В цикле do-while запрашивает у пользователя ввод числа до тех пор, пока число не будет угадано. Считает и выводит количество попыток.

Задача 16
Текст задачи
Дана сигнатура метода: public int findLast (int[] arr, int x); Необходимо реализовать метод таким образом, чтобы он возвращал индекс последнего вхождения числа x в массив arr. Если число не входит в массив – возвращается -1

Алгоритм решения
Проходит массив с конца к началу. При нахождении элемента x возвращает его позицию (начиная с 1). Если элемент не найден, возвращает -1.

Задача 17
Текст задачи
Дана сигнатура метода: public int[]add (int[] arr, int x, int pos); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, который будет содержать все элементы массива arr, однако в позицию pos будет вставлено значение x.

Алгоритм решения
Проверяет корректность позиции pos. Создаёт новый массив размером на 1 больше. Копирует элементы до позиции pos, вставляет новый элемент, копирует оставшиеся элементы.

Задача 18
Текст задачи
Дана сигнатура метода: public void reverse (int[] arr); Необходимо реализовать метод таким образом, чтобы он изменял массив arr. После проведенных изменений массив должен быть записан задом-наперед.

Алгоритм решения
Использует алгоритм двух указателей: left начинает с начала массива, right - с конца На каждой итерации меняет местами arr[left] и arr[right] Сдвигает указатели к центру пока left < right

Задача 19
Текст задачи
Дана сигнатура метода: public int[] concat (int[] arr1,int[] arr2); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, в котором сначала идут элементы первого массива (arr1), а затем второго (arr2)

Алгоритм решения
Создаёт новый массив размером arr1.Length + arr2.Length. Копирует все элементы из arr1, затем все элементы из arr2 со смещением на длину первого массива.

Задача 20
Текст задачи
Дана сигнатура метода: public int[] deleteNegative (int[] arr); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, в котором записаны все элементы массива arr кроме отрицательных.

Алгоритм решения
Первым проходом подсчитывает количество неотрицательных элементов. Создаёт новый массив нужного размера. Вторым проходом копирует только неотрицательные элементы в новый массив.
