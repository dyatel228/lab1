Блажко Иван ИТ-8 Лабораторная работа №1
Задача 1
Текст задачи
Дана сигнатура метода: public int sumLastNums (int x); Необходимо реализовать метод таким образом, чтобы он возвращал результат сложения двух последних знаков числах, предполагая, что знаков в числе не менее двух.

Алгоритм решения
x % 10 - получает последнюю цифру числа (единицы) x % 100 / 10 - получает предпоследнюю цифру (десятки) Возвращает сумму полученных значений

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 1
Введите число: 1
Сумма чисел равна: 1

Выберите номер метода или введите число 21 для выхода из программы: 1
Введите число: 16435
Сумма чисел равна: 8

Выберите номер метода или введите число 21 для выхода из программы: 1
Введите число: -64350
Сумма чисел равна: -5



Задача 2
Текст задачи
Дана сигнатура метода: public bool isPositive (int x); Необходимо реализовать метод таким образом, чтобы он принимал число x и возвращал true, если оно положительное

Алгоритм решения
Сравнивает число x с нулём. Если x ≥ 0, возвращает true, иначе false.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 2
Введите число: 110
True

Выберите номер метода или введите число 21 для выхода из программы: 2
Введите число: -67243
False

Выберите номер метода или введите число 21 для выхода из программы: 2
Введите число: asdw
Ошибка: Введено не число. Попробуйте снова.
Введите число: 0
True

Задача 3
Текст задачи
Дана сигнатура метода: public bool isUpperCase (char x); Необходимо реализовать метод таким образом, чтобы он принимал символ x и возвращал true, если это большая буква в диапазоне от ‘A’ до ‘Z’.

Алгоритм решения
Проверяет, находится ли символ x в диапазоне от 'A' до 'Z' включительно Если буква заглавная возвращает True, иначе False

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 3
Введите символ: A
True

Выберите номер метода или введите число 21 для выхода из программы: 3
Введите символ: h
False

Выберите номер метода или введите число 21 для выхода из программы: 3
Введите символ: 52
False

Задача 4
Текст задачи
Дана сигнатура метода: public bool isDivisor (int a, int b); Необходимо реализовать метод таким образом, чтобы он возвращал true, если любое из принятых чисел делит другое нацело.

Алгоритм решения
Проверяет два условия: a % b == 0 - делится ли a на b без остатка b % a == 0 - делится ли b на a без остатка Возвращает true, если выполняется хотя бы одно условие.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 4
Введите первое число: 4
Введите второе число: 6
False

Выберите номер метода или введите число 21 для выхода из программы: 4
Введите первое число: 4
Введите второе число: 12
True

Выберите номер метода или введите число 21 для выхода из программы: 4
Введите первое число: -8
Введите второе число: 8
True

Задача 5
Текст задачи
Дана сигнатура метода: public int lastNumSum(int a, int b) Необходимо реализовать метод таким образом, чтобы он считал сумму цифр двух чисел из разряда единиц. Выполните с его помощью последовательное сложение пяти чисел и результат выведите на экран. Постарайтесь выполнить задачу, используя минимально возможное количество вспомогательных переменных.

Алгоритм решения
Шаг 1: Первое сложение Вычисляем сумму последних цифр чисел a и b Сохраняем результат в переменную c Выводим на экран сообщение формата "a + b это c"

Шаг 2: Второе сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата c и последней цифры нового числа a Сохраняем результат в переменную b Выводим на экран сообщение формата "c + a это b"

Шаг 3: Третье сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата b и последней цифры нового числа a Сохраняем результат в переменную c Выводим на экран сообщение формата "b + a это c"

Шаг 4: Четвертое сложение Выводим запрос на ввод нового числа для сложения с предыдущим результатом Считываем введенное пользователем число и сохраняем в переменную a Вычисляем сумму последней цифры предыдущего результата c и последней цифры нового числа a Сохраняем результат в переменную b Выводим на экран сообщение формата "c + a это b"

Шаг 5: Завершение Возвращаем конечный результат из переменной b

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 5
Введите первое число: 123
Введите второе число: 2
123 + 2 это 5
Введите новое число для сложения с предыдущим: 34
5 + 34 это 9
Введите новое число для сложения с предыдущим: 10
9 + 10 это 9
Введите новое число для сложения с предыдущим: 11
9 + 11 это 10
10

Выберите номер метода или введите число 21 для выхода из программы: 5
Введите первое число: 13
Введите второе число: -4
13 + -4 это -1
Введите новое число для сложения с предыдущим: 13
-1 + 13 это 2
Введите новое число для сложения с предыдущим: -10
2 + -10 это 2
Введите новое число для сложения с предыдущим: -5
2 + -5 это -3
-3

Задача 6
Текст задачи
Дана сигнатура метода: public double safeDiv(int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал деление x на y, и при этом гарантировал, что не будет выкинута ошибка деления на 0. При делении на 0 следует вернуть из метода число 0. Подсказка: смотри ограничения на операции типов данных.

Алгоритм решения
Проверяет, равен ли делитель y нулю. Если да, возвращает 0. Иначе возвращает деление x на y.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 6
Введите число X: 0
Введите число Y: 1
0

Выберите номер метода или введите число 21 для выхода из программы: 6
Введите число X: 10
Введите число Y: 5
2

Выберите номер метода или введите число 21 для выхода из программы: 6
Введите число X: 16
Введите число Y: 0
0

Задача 7
Текст задачи
Дана сигнатура метода: public String makeDecision (int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал строку, которая включает два принятых методом числа и корректно выставленный знак операции сравнения (больше, меньше, или равно)

Алгоритм решения
Сравнивает x и y: Если x > y, возвращает строку "x > y" Если x < y, возвращает строку "x < y" Иначе возвращает строку "x == y"

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 7
Введите первое число: 16
Введите второе число: 7
16 > 7

Выберите номер метода или введите число 21 для выхода из программы: 7
Введите первое число: -7
Введите второе число: 7
-7 < 7

Выберите номер метода или введите число 21 для выхода из программы: 7
Введите первое число: 13
Введите второе число: 13
13 == 13

Задача 8
Текст задачи
Дана сигнатура метода: public bool sum3 (int x, int y, int z); Необходимо реализовать метод таким образом, чтобы он возвращал true, если два любых числа (из трех принятых) можно сложить так, чтобы получить третье.

Алгоритм решения
Проверяет три возможные комбинации: x + y == z x + z == y y + z == x Возвращает true, если выполняется хотя бы одна комбинация. Иначе возвращает false

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 8
Введите первое число: 5
Введите второе число: 6
Введите третье число: 11
True

Введите первое число: 3
Введите второе число: 2
Введите третье число: 7
False

Выберите номер метода или введите число 21 для выхода из программы: 8
Введите первое число: 50
Введите второе число: 100
Введите третье число: 30
False

Задача 9
Текст задачи
Дана сигнатура метода: public String age (int x); Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой сначала будет число х, а затем одно из слов: год года лет Слово “год” добавляется, если число х заканчивается на 1, кроме числа 11. Слово “года” добавляется, если число х заканчивается на 2, 3 или 4, кроме чисел 12, 13, 14. Слово “лет” добавляется во всех остальных случаях

Алгоритм решения
Проверяет окончание числа x: число x делится на 10 с остатком 1 и не равно 11 - "год" число x делится на 10 с остатком 2, 3, 4 и не в диапазоне 12-14 - "года" В остальных случаях - "лет"

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 9
Введите ваш возраст: 14
Вам 14 лет

Выберите номер метода или введите число 21 для выхода из программы: 9
Введите ваш возраст: 91
Вам 91 год

Выберите номер метода или введите число 21 для выхода из программы: 9
Введите ваш возраст: 44
Вам 44 года

Задача 10
Текст задачи
Дана сигнатура метода: public void printDays (String x); В качестве параметра метод принимает строку, в которой записано название дня недели. Необходимо реализовать метод таким образом, чтобы он выводил на экран название переданного в него дня и всех последующих до конца недели дней. Если в качестве строки передан не день, то выводится текст “это не день недели”. Первый день понедельник, последний – воскресенье. Вместо if в данной задаче используйте switch.

Алгоритм решения
Использует оператор switch с goto case для последовательного вывода дней недели. Приводит входную строку к нижнему регистру. Обрабатывает некорректный ввод через default.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 10
Введите день недели: Понедельник
понедельник
вторник
среда
четверг
пятница
суббота
воскресенье

Выберите номер метода или введите число 21 для выхода из программы: 10
Введите день недели: Июнь
это не день недели

Выберите номер метода или введите число 21 для выхода из программы: 10
Введите день недели: четверг
четверг
пятница
суббота
воскресенье

Задача 11
Текст задачи
Дана сигнатура метода: public String reverseListNums(int x); Дана сигнатура метода: public String reverseListNums (int x); Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой будут записаны все числа от x до 0 (включительно).

Алгоритм решения
Использует цикл while, который выполняется пока x ≥ 0. На каждой итерации добавляет текущее значение x к результату и уменьшает x на 1.

Выберите номер метода или введите число 21 для выхода из программы: 11
Введите число: 5
5 4 3 2 1 0

Введите число: 100
100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0

Выберите номер метода или введите число 21 для выхода из программы: 11
Введите число: -5
Ошибка: Число не может быть отрицательным. Попробуйте снова.



Задача 12
Текст задачи
Дана сигнатура метода: public int pow (int x, int y); Необходимо реализовать метод таким образом, чтобы он возвращал результат возведения x в степень y

Алгоритм решения
Инициализирует переменную pow = 1. В цикле от 0 до y-1 умножает pow на x. Возвращает полученное значение.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 12
Введите число: 2
Введите степень числа: 5
32

Выберите номер метода или введите число 21 для выхода из программы: 12
Введите число: -5
Введите степень числа: 2
25

Выберите номер метода или введите число 21 для выхода из программы: 12
Введите число: -10
Введите степень числа: 3
-1000


Задача 13
Текст задачи
Дана сигнатура метода: public bool equalNum (int x); Необходимо реализовать метод таким образом, чтобы он возвращал true, если все знаки числа одинаковы, и false в ином случае.

Алгоритм решения
Обрабатывает особый случай x = 0. Для отрицательных чисел берёт модуль. Запоминает последнюю цифру и в цикле проверяет, что все цифры числа равны этой цифре.

Тесты
Введите число: 111111
True

Введите число: 101001001
False

Выберите номер метода или введите число 21 для выхода из программы: 13
Введите число: 11111110
False

Задача 14
Текст задачи
Дана сигнатура метода: public void leftTriangle (int x); Необходимо реализовать метод таким образом, чтобы он выводил на экран треугольник из символов ‘*’ у которого х символов в высоту, а количество символов в ряду совпадает с номером строки.

Алгоритм решения
Использует двойной цикл: Внешний цикл от 1 до x (количество строк) Внутренний цикл от 1 до i (количество звёздочек в строке)

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 14
Введите число: 5
*
**
***
****
*****

Введите число: 10
*
**
***
****
*****
******
*******
********
*********
**********

Выберите номер метода или введите число 21 для выхода из программы: 14
Введите число: -1
Ошибка: Число не может быть отрицательным. Попробуйте снова.


Задача 15
Текст задачи
Дана сигнатура метода: public void guessGame() Необходимо реализовать метод таким образом, чтобы он генерировал случайное число от 0 до 9, далее считывал с консоли введенное пользователем число и выводил, угадал ли пользователь то, что было загадано, или нет. Метод запускается до тех пор, пока пользователь не угадает число. После этого выведите на экран количество попыток, которое потребовалось пользователю, чтобы угадать число.

Алгоритм решения
Генерирует случайное число от 0 до 9. В цикле do-while запрашивает у пользователя ввод числа до тех пор, пока число не будет угадано. Считает и выводит количество попыток.

Тесты
Угадайте число от 0 до 9!
Введите число от 0 до 9: 3
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 2
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 6
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 5
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 8
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 7
Вы угадали!
Вы отгадали число за 6 попыт(ки/ок)

Угадайте число от 0 до 9!
Введите число от 0 до 9: 1
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: -2
Ошибка: Число должно быть в диапазоне от 0 до 9. Попробуйте снова.
Введите число от 0 до 9: 3
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 6
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 5
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 4
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 7
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 8
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 9
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 5
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 4
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 3
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 2
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 1
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 4
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 5
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 6
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 7
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 8
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 9
Вы не угадали, попробуйте снова.
Введите число от 0 до 9: 0
Вы угадали!
Вы отгадали число за 20 попыт(ки/ок)

Задача 16
Текст задачи
Дана сигнатура метода: public int findLast (int[] arr, int x); Необходимо реализовать метод таким образом, чтобы он возвращал индекс последнего вхождения числа x в массив arr. Если число не входит в массив – возвращается -1

Алгоритм решения
Проходит массив с конца к началу. При нахождении элемента x возвращает его позицию (начиная с 1). Если элемент не найден, возвращает -1.

Тесты
Введите размер массива: 5
Введите элемент 1 для массива: 1
Введите элемент 2 для массива: 2
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 1
Введите элемент 5 для массива: 4
Введите число для поиска: 1
Элемент найден на позиции: 4

Введите размер массива: 5
Введите элемент 1 для массива: 1
Введите элемент 2 для массива: 2
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 4
Введите элемент 5 для массива: 5
Введите число для поиска: 6
-1

Введите размер массива: 7
Введите элемент 1 для массива: 21
Введите элемент 2 для массива: 6
Введите элемент 3 для массива: 7
Введите элемент 4 для массива: 4
Введите элемент 5 для массива: 4
Введите элемент 6 для массива: 6
Введите элемент 7 для массива: 8
Введите число для поиска: 4
Элемент найден на позиции: 5

Задача 17
Текст задачи
Дана сигнатура метода: public int[]add (int[] arr, int x, int pos); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, который будет содержать все элементы массива arr, однако в позицию pos будет вставлено значение x.


Алгоритм решения
Проверяет корректность позиции pos. Создаёт новый массив размером на 1 больше. Копирует элементы до позиции pos, вставляет новый элемент, копирует оставшиеся элементы.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 17
Введите размер массива: 5
Введите элемент 1 для массива: 1
Введите элемент 2 для массива: 2
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 4
Введите элемент 5 для массива: 5
Введите новый элемент для добавления в массив: 6
Введите номер позиции в которую будет добавлен новый элемент: 5
Новый массив: [1, 2, 3, 4, 5, 6]

Введите размер массива: 5
Введите элемент 1 для массива: 8
Введите элемент 2 для массива: 43
Введите элемент 3 для массива: 6
Введите элемент 4 для массива: 2
Введите элемент 5 для массива: 3
Введите новый элемент для добавления в массив: А
Ошибка: Введено не число. Попробуйте снова.
Введите новый элемент для добавления в массив: -30
Введите номер позиции в которую будет добавлен новый элемент: -1
Ошибка: Число должно быть в диапазоне от 0 до 5. Попробуйте снова.
Введите номер позиции в которую будет добавлен новый элемент: 6
Ошибка: Число должно быть в диапазоне от 0 до 5. Попробуйте снова.
Введите номер позиции в которую будет добавлен новый элемент: 5
Новый массив: [8, 43, 6, 2, 3, -30]

Задача 18
Текст задачи
Дана сигнатура метода: public void reverse (int[] arr); Необходимо реализовать метод таким образом, чтобы он изменял массив arr. После проведенных изменений массив должен быть записан задом-наперед.

Алгоритм решения
Использует алгоритм двух указателей: left начинает с начала массива, right - с конца На каждой итерации меняет местами arr[left] и arr[right] Сдвигает указатели к центру пока left < right

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 18
Введите размер массива: 7
Введите элемент 1 для массива: 12
Введите элемент 2 для массива: 2
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 7
Введите элемент 5 для массива: 4
Введите элемент 6 для массива: 6
Введите элемент 7 для массива: 0
Новый массив: [0, 6, 4, 7, 3, 2, 12]

Введите размер массива: 3
Введите элемент 1 для массива: 7
Введите элемент 2 для массива: 1
Введите элемент 3 для массива: 3
Новый массив: [3, 1, 7]

Выберите номер метода или введите число 21 для выхода из программы: 18
Введите размер массива: 6
Введите элемент 1 для массива: 5
Введите элемент 2 для массива: 4
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 2
Введите элемент 5 для массива: 1
Введите элемент 6 для массива: 0
Новый массив: [0, 1, 2, 3, 4, 5]


Задача 19
Текст задачи
Дана сигнатура метода: public int[] concat (int[] arr1,int[] arr2); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, в котором сначала идут элементы первого массива (arr1), а затем второго (arr2)

Алгоритм решения
Создаёт новый массив размером arr1.Length + arr2.Length. Копирует все элементы из arr1, затем все элементы из arr2 со смещением на длину первого массива.

Тесты
Выберите номер метода или введите число 21 для выхода из программы: 19
Введите размер массива 1: 3
Введите элемент 1 для первого массива: 1
Введите элемент 2 для первого массива: 2
Введите элемент 3 для первого массива: 3
Введите размер массива 2: 4
Введите элемент 1 для второго массива: 8
Введите элемент 2 для второго массива: 9
Введите элемент 3 для второго массива: 0
Введите элемент 4 для второго массива: 7
Объединенный массив: 1, 2, 3, 8, 9, 0, 7

Выберите номер метода или введите число 21 для выхода из программы: 19
Введите размер массива 1: 5
Введите элемент 1 для первого массива: 8
Введите элемент 2 для первого массива: 4
Введите элемент 3 для первого массива: 6
Введите элемент 4 для первого массива: 4
Введите элемент 5 для первого массива: 0
Введите размер массива 2: 2
Введите элемент 1 для второго массива: 4
Введите элемент 2 для второго массива: 1
Объединенный массив: 8, 4, 6, 4, 0, 4, 1

Задача 20
Текст задачи
Дана сигнатура метода: public int[] deleteNegative (int[] arr); Необходимо реализовать метод таким образом, чтобы он возвращал новый массив, в котором записаны все элементы массива arr кроме отрицательных.

Алгоритм решения
Первым проходом подсчитывает количество неотрицательных элементов. Создаёт новый массив нужного размера. Вторым проходом копирует только неотрицательные элементы в новый массив.

Тесты

Выберите номер метода или введите число 21 для выхода из программы: 20
Введите размер массива: 7
Введите элемент 1 для массива: -1
Введите элемент 2 для массива: 5
Введите элемент 3 для массива: 2
Введите элемент 4 для массива: -6
Введите элемент 5 для массива: 7
Введите элемент 6 для массива: 4
Введите элемент 7 для массива: -5
Массив без отрицательных значений: 5, 2, 7, 4

Выберите номер метода или введите число 21 для выхода из программы: 20
Введите размер массива: 20
Введите элемент 1 для массива: 1
Введите элемент 2 для массива: 2
Введите элемент 3 для массива: 3
Введите элемент 4 для массива: 4
Введите элемент 5 для массива: 5
Введите элемент 6 для массива: 6
Введите элемент 7 для массива: 7
Введите элемент 8 для массива: 8
Введите элемент 9 для массива: 9
Введите элемент 10 для массива:
Ошибка: Введено не число. Попробуйте снова.
Введите элемент 10 для массива: 3
Введите элемент 11 для массива: 4
Введите элемент 12 для массива:
Ошибка: Введено не число. Попробуйте снова.
Введите элемент 12 для массива: 13
Введите элемент 13 для массива: 6
Введите элемент 14 для массива: 423
Введите элемент 15 для массива: 6
Введите элемент 16 для массива: 4
Введите элемент 17 для массива: 165
Введите элемент 18 для массива: 3
Введите элемент 19 для массива: 4
Введите элемент 20 для массива: -100
Массив без отрицательных значений: 1, 2, 3, 4, 5, 6, 7, 8, 9, 3, 4, 13, 6, 423, 6, 4, 165, 3, 4

Выберите номер метода или введите число 21 для выхода из программы: 20
Введите размер массива: 7
Введите элемент 1 для массива: 5
Введите элемент 2 для массива: 4
Введите элемент 3 для массива: -10
Введите элемент 4 для массива: -200
Введите элемент 5 для массива: 300
Введите элемент 6 для массива: 400
Введите элемент 7 для массива: -1
Массив без отрицательных значений: 5, 4, 300, 400

